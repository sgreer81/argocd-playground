apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-canary
spec:
  replicas: 5
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollout-canary
  template:
    metadata:
      labels:
        app: rollout-canary
    spec:
      containers:
        - name: rollouts-demo
          image: argoproj/rollouts-demo:blue
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
  strategy:
    canary:
      steps:
        - setWeight: 20
        # The following pause step will pause the rollout indefinitely until manually resumed.
        # Rollouts can be manually resumed by running `kubectl argo rollouts promote ROLLOUT`
        - pause: {}
        - setWeight: 40
        - pause: { duration: 40s }
        - setWeight: 60
        - pause: { duration: 20s }
        - setWeight: 80
        - pause: { duration: 20s }
      canaryService: rollout-canary-service  # required
      stableService: rollout-stable-service  # required
      trafficRouting:
        nginx:
          stableIngress: rollout-example-ingress  # required
          annotationPrefix: customingress.nginx.ingress.kubernetes.io # optional
          additionalIngressAnnotations:   # optional
            canary-by-header: X-Canary
            canary-by-header-value: iwantsit


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rollout-example-ingress
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rollout-stable-service
            port:
              number: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: rollout-stable-service
spec:
  selector:
    app: rollout-stable-service
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080