apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: example-application
spec:
  replicas: 5
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: example-application
  template:
    metadata:
      labels:
        app: example-application
    spec:
      containers:
        - name: rollouts-demo
          image: argoproj/rollouts-demo:blue
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
  strategy:
    canary:
      steps:
        - setWeight: 20
        # The following pause step will pause the rollout indefinitely until manually resumed.
        # Rollouts can be manually resumed by running `kubectl argo rollouts promote ROLLOUT`
        - pause: {}
        - setWeight: 40
        - pause: { duration: 40s }
        - setWeight: 60
        - pause: { duration: 20s }
        - setWeight: 80
        - pause: { duration: 20s }
      canaryService: example-application-stable  # required
      stableService: example-application-canary  # required
      trafficRouting:
        nginx:
          stableIngress: example-application-ingress  # required


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-application-ingress
spec:
  rules:
  - host: "example-application.local.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: example-application-stable
            port:
              number: 8080
  - host: "example-application.local.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: example-application-canary
            port:
              number: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: example-application-stable
spec:
  selector:
    app: example-application
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: example-application-canary
spec:
  selector:
    app: example-application
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080